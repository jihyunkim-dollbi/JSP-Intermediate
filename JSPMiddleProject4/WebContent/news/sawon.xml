<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	2020 03 23
	XML => 사용자정의 파일(지원하는  태그가 없다.)
		       목적이 화면출력이 아니라 문서에 데이터를 저장하는데 있다.
		       			   ==============
		       		               데이터 저장의 3가지 방법
		       			   <태그>데이터</태그>
		       			   <태그 속성="데이터"/>
		       			   <태그 속성="데이터">데이터</태그>
		       모든 운영체제에 호환성이 좋다. MARKUP LANGUAGE!(1. TAG 2.  속성으로 이루어짐)
			====> 타 언어와 상관없이 파싱가능(XML의 데이터를 읽는것 == 데이터가져오기) => b2b(기업간상거래) 
			====> 문서형 데이터 베이스 
			====> 단점: 문서가 길어지면 속도가 늦어짐(분산하여 작게 만들기)
			
			**** 사용자정의이기 때문에 태그를 알아보기 어려울 수 있다. 모든 프레임워크에 xml파일이 있다. 외워서 습득 해야함.
			      따라서, 시맨텍 태그(HTML5 버전)를 사용하길 권장!
			   	
			   HTML5  ==> 누구나 알아보기 쉽게 태그 정의됨
			   	<video><audio>
			   HTML4  ==> 추상적으로 알아보기 어렵게 태그 정의됨
			   	<object><embed>			
			
				ex) 4 => <a><b><c>
					5 => <name><addr><tel> => much better!
			  ====> XML을 이용하는 프로그램
			  		MyBatis, Spring, Kotlin
			  		Ajax, React, Vue
					================
					Javascript => JSX로 변환되는 중  ==> TSX(TypedScriptXml?)
					JS  		  Javascript+XML!
					
			
			
	알아야할 3가지!
	1. XML만드는 방법
		=태그
			1)여는 태그 =========> <table>
			2)닫는 태그 =========> </table>
			3)빈태그(EMPTY TAG)=> <bt/> ex) <input/>, <img/> => 속성이 값이 되는 아이들! 
			=================================================================
		
		=문법:태그를 만드는 방법
		
			1)최상위 태그가 있어야 한다., 루트는 반드시 한개만 만들어야한다.
				ex) <a>aaa</a>
					<b>bbb></b> ===> error
					
					<c> (루트태그 존재!)
						<a>aaa</a>
						<b>bbb></b>
					</c>
			2)여는 태그/닫는 태그가 반드시 존재해야 한다.
				<a><b><c>ccc</c></b></a> => ok!
			3)태그나 속성은 대소문자를 구분한다.
			4)<a> =! <A>
			5)속성의 값은 반드시 ""
			6)태그를 만들때 숫자 사용이 가능한데 첫글자에 사용할 수 없다.
				<1a> => x <a1> => o
			7)키워드는 사용 할 수 없다 => 유일한 키워드:xml!
			8)태그는 공백을 줄 수 없다. < a> => x
			9)소문자 기본
		=속성 
		
		
		
	2. DTD 파일 만들기
	3. JAVA에서 파싱하는 방법, XML파일을 가져오는 방법!

 -->
  <!-- 계층구조를 갖고 있다=>DOM(Document Object Model)
  	
  		=자바에서 파싱하는 방법
  			1) DOM 
  				메모리에 저장 => 제어가능 (수정,삭제, 추가) => 정보 노출 가능성!
  			2) SAX(Spring, MyBatis)
  				읽기 전용! xml을 읽어오기만 함! 오류가 나면 전체적으로 error!
  				(수정, 삭제, 추가) X 
  
    -->
    
 <!-- xml 작성! 데이터 베이스의 테이블을 태그형으로 표현하는 것! -->
 <sawon> <!-- 데이터베이스의 테이블 역할! -->
 	<list> <!--  데이터베이스의 row 역할 -->
 		<name>홍길동</name> <!-- 데이터베이스의 culumn 역할! -->
 		<addr>서울</addr>
 		<sex>남자</sex>
 	</list>
 	<list>
 		<name>심청이</name>
 		<addr>부산</addr>
 		<sex>여자</sex>
 	</list>
 	<list>
 		<name>박문수</name>
 		<addr>서울</addr>
 		<sex>남자</sex>
 	</list>
 </sawon>
 

 